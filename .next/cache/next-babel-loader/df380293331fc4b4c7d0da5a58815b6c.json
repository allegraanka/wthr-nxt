{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/aanka/Desktop/code/wthr-nxt/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.conditions.map(condition => __jsx(\"li\", {\n  key: condition.timezone,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${condition.latitude}/${condition.longitude}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, condition.timezone))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.darksky.net/forecast/0e17dfdfdee5ff8839c6ffead1cf1b74/37.8267,-122.4233');\n  const data = await res.json();\n  console.log(`D A T A : ${data}`);\n  console.log(`S T R I N G I F I E D : ${_JSON$stringify(data)}`);\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    conditions: data.map(entry => entry.condition)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aanka/Desktop/code/wthr-nxt/pages/index.js"],"names":["Layout","Link","fetch","Index","props","conditions","map","condition","timezone","latitude","longitude","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAC7B;AAAI,EAAA,GAAG,EAAEA,SAAS,CAACC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,SAAS,CAACE,QAAS,IAAGF,SAAS,CAACG,SAAU,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIH,SAAS,CAACC,QAAd,CADF,CADF,CADD,CADH,CAFF,CADF;;AAeAL,KAAK,CAACQ,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,qFAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYH,IAAK,EAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0B,gBAAeH,IAAf,CAAqB,EAA5D;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLZ,IAAAA,UAAU,EAAEQ,IAAI,CAACP,GAAL,CAASY,KAAK,IAAIA,KAAK,CAACX,SAAxB;AADP,GAAP;AAGD,CAXD;;AAaA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.conditions.map(condition => (\n        <li key={condition.timezone}>\n          <Link href=\"/p/[id]\" as={`/p/${condition.latitude}/${condition.longitude}`}>\n            <a>{condition.timezone}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.darksky.net/forecast/0e17dfdfdee5ff8839c6ffead1cf1b74/37.8267,-122.4233');\n  const data = await res.json();\n\n  console.log(`D A T A : ${data}`);\n  console.log(`S T R I N G I F I E D : ${JSON.stringify(data)}`);\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    conditions: data.map(entry => entry.condition)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}