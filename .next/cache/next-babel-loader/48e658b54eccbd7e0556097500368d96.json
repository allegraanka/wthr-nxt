{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/aanka/Desktop/code/wthr-nxt/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.conditions.map(function (condition) {\n    return __jsx(\"li\", {\n      key: condition.timezone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(condition.latitude, \"/\").concat(condition.longitude),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, condition.timezone)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.darksky.net/forecast/0e17dfdfdee5ff8839c6ffead1cf1b74/37.8267,-122.4233'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"D A T A : \".concat(data));\n          console.log(\"S T R I N G I F I E D : \".concat(_JSON$stringify(data)));\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            conditions: data.map(function (entry) {\n              return entry.condition;\n            })\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aanka/Desktop/code/wthr-nxt/pages/index.js"],"names":["Layout","Link","fetch","Index","props","conditions","map","condition","timezone","latitude","longitude","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqB,UAAAC,SAAS;AAAA,WAC7B;AAAI,MAAA,GAAG,EAAEA,SAAS,CAACC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,SAAS,CAACE,QAAlB,cAA8BF,SAAS,CAACG,SAAxC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,SAAS,CAACC,QAAd,CADF,CADF,CAD6B;AAAA,GAA9B,CADH,CAFF,CADiB;AAAA,CAAnB;;AAeAL,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJT,KAAK,CAAC,qFAAD,CADD;;AAAA;AAChBU,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qBAAyBF,IAAzB;AACAC,UAAAA,OAAO,CAACC,GAAR,mCAAuC,gBAAeF,IAAf,CAAvC;AACAC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AANsB,2CAQf;AACLZ,YAAAA,UAAU,EAAES,IAAI,CAACR,GAAL,CAAS,UAAAY,KAAK;AAAA,qBAAIA,KAAK,CAACX,SAAV;AAAA,aAAd;AADP,WARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.conditions.map(condition => (\n        <li key={condition.timezone}>\n          <Link href=\"/p/[id]\" as={`/p/${condition.latitude}/${condition.longitude}`}>\n            <a>{condition.timezone}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.darksky.net/forecast/0e17dfdfdee5ff8839c6ffead1cf1b74/37.8267,-122.4233');\n  const data = await res.json();\n\n  console.log(`D A T A : ${data}`);\n  console.log(`S T R I N G I F I E D : ${JSON.stringify(data)}`);\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    conditions: data.map(entry => entry.condition)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}